use music;
-- Who is the senior most employee based on job title?
select * from employee
where levels=(
select max(levels) from employee
)
;

-- Which countries have the most Invoices?

select billing_country,count(invoice_id)as Invoices from invoice
group by 1
order by Invoices desc
limit 1
;

--  What are top 3 values of total invoice?

select total from invoice
group by 1
order by total desc
limit 3
;

/* Which city has the best customers? We would like to throw a promotional Music
Festival in the city we made the most money. Write a query that returns one city that
has the highest sum of invoice totals. Return both the city name & sum of all invoice
totals*/


select customer.city,sum(invoice.total) as total_invoice from customer
join invoice on invoice.customer_id=customer.customer_id
group by 1
order by total_invoice desc
;

/*Who is the best customer? The customer who has spent the most money will be
declared the best customer. Write a query that returns the person who has spent the
most money*/

select customer.first_name,customer.customer_id,sum(invoice.total) as total_spent from customer
join invoice on invoice.customer_id=customer.customer_id
group by 1,2
order by total_spent desc
limit 1 ;

/*  Write query to return the email, first name, last name, & Genre of all Rock Music
listeners. Return your list ordered alphabetically by email starting with A */

select customer.email,customer.first_name,customer.last_name,genre.name from customer
join invoice on invoice.customer_id=customer.customer_id
join invoice_line on invoice_line.invoice_id=invoice.invoice_id
join track on track.track_id=invoice_line.track_id
join genre on genre.genre_id=track.genre_id
where genre.name like "Rock%"
order by email asc;

/* Let's invite the artists who have written the most rock music in our dataset. Write a
query that returns the Artist name and total track count of the top 10 rock bands. */

select artist.name,count(track.track_id) total_track from artist
join album on album.artist_id=artist.artist_id
join track on track.album_id=album.album_id
join genre on genre.genre_id=track.genre_id
where genre.name like "%Rock%"
group by 1
order by total_track desc
limit 10
;

/* Return all the track names that have a song length longer than the average song length.
Return the Name and Milliseconds for each track. Order by the song length with the
longest songs listed first
 */
 
 select * from track;
 
select name,milliseconds from track 
where  milliseconds >(
select avg(milliseconds) from track)
order by milliseconds desc
limit 3
;

/* Find how much amount spent by each customer on artists? Write a query to return
customer name, artist name and total spent
 */
 
 select  concat(customer.first_name," ",customer.last_name) as customer,artist.name as artist_name,sum(invoice_line.unit_price*invoice_line.quantity) as total_spent
 from customer
 join invoice on invoice.customer_id=customer.customer_id
 join invoice_line on invoice_line.invoice_id=invoice.invoice_id
 join track on track.track_id=invoice_line.track_id
 join album on album.album_id=track.album_id
 join artist on artist.artist_id=album.artist_id
 group by 1,2
 order by total_spent desc
 limit 3;

/* or */

with Best_selling_artist as (
select artist.name as artist_name,artist.artist_id as artist_id,sum(invoice_line.unit_price*invoice_line.quantity) as total_purchase
from invoice_line
join track on track.track_id=invoice_line.track_id
join album on album.album_id=track.album_id
join artist on artist.artist_id=album.artist_id
group by 1,2
order by total_purchase desc
limit 1
)
select c.first_name,c.last_name,c.customer_id,bsa.artist_name,
sum(il.unit_price*il.quantity) as amount_spent from invoice i
join customer c on c.customer_id=i.customer_id
join invoice_line il on il.invoice_id=i.invoice_id
join track t on t.track_id=il.track_id
join album al on al.album_id=t.album_id
join best_selling_artist bsa on bsa.artist_id=al.artist_id
group by 1,2,3,4
order by 5 desc;
 
 
 /* We want to find out the most popular music Genre for each country. We determine the
most popular genre as the genre with the highest amount of purchases. Write a query
that returns each country along with the top Genre. For countries where the maximum
number of purchases is shared return all Genres
 */
 
 
 select c.country ,genre.name,count(il.quantity) as purchases from  invoice
 join invoice_line il on il.invoice_id=invoice.invoice_id
 join customer c on c.customer_id=invoice.customer_id
 join track on track.track_id=il.track_id
 join genre on genre.genre_id=track.genre_id
 group by 1,2
 order by purchases desc;


/* Write a query that determines the customer that has spent the most on music for each
country. Write a query that returns the country along with the top customer and how
much they spent. For countries where the top amount spent is shared, provide all
customers who spent this amount
 */
 
 select c.country, c.first_name,c.last_name,sum(i.total) purchase from  invoice_line
 join invoice i on i.invoice_id=invoice_line.invoice_id
 join customer c on c.customer_id=i.customer_id
 group by 1,2,3
 order by purchase desc
 limit 3
 ;






